openapi: "3.0.1"
info:
  title: Account Service API
  description: API para gestionar cuentas bancarias.
  version: 2.0.1
servers:
  - url: http://localhost:8085
    description: Servidor local

paths:
  /api/accounts:
    post:
      summary: Crear una nueva cuenta bancaria
      operationId: registerAccount
      requestBody:
        description: Detalles de la nueva cuenta bancaria
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountRequest"
      responses:
        '201':
          description: Cuenta creada exitosamente
          headers:
            Location:
              description: URL del recurso creado
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponse"
        '400':
          description: Error de validación de negocio - Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflicto de unicidad (número de cuenta/interbancario generado ya existe)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Regla de negocio no cumplida (p.ej., VIP/PYME sin tarjeta de crédito activa)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Listar todas las cuentas
      operationId: listAccounts
      tags: [ account ]
      responses:
        '200':
          description: Lista de cuentas bancarias
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountResponse"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/accounts/{id}:
    get:
      summary: Obtener cuenta por ID
      operationId: getAccountById
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Datos de la cuenta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponse"
        '404':
          description: Cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Actualizar cuenta existente
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        description: Datos actualizados de la cuenta bancaria
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountRequest"
      responses:
        '200':
          description: Cuenta actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponse"
        '400':
          description: Error de validación de negocio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Eliminar cuenta
      operationId: deleteAccount
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204':
          description: Cuenta eliminada exitosamente
        '404':
          description: Cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/accounts/{id}/limits:
    get:

      summary: Obtener límites y comisiones de la cuenta
      operationId: getAccountLimits
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Política de límites y comisiones
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLimitsResponse"
        '404':
          description: Cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


  /api/accounts/holder/{document}:
    get:
      summary: Listar cuentas por documento del titular
      operationId: listAccountsByHolderDocument
      parameters:
        - name: document
          in: path
          required: true
          schema:
            type: string
            pattern: '^\d{8,11}$'
      responses:
        '200':
          description: Lista de cuentas del titular
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountResponse"
        '404':
          description: No se encontraron cuentas para el titular
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/accounts/{id}/balance-ops:
    post:
      summary: Aplicar operación de saldo e informar comisión (uso interno por Transactions)
      description: >
        Aplica una operación de saldo (depósito, retiro, transfer_in/out).  
        Lleva el conteo mensual de operaciones **gratis** y aplica **comisión** al excedente.  
        Usa `operationId` para idempotencia.
      operationId: applyBalanceOperation
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        description: Operación a aplicar (idempotente)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceOperationRequest'
      responses:
        '200':
          description: Operación aplicada/evaluada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceOperationResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflicto (p.ej., operación duplicada si `operationId` ya fue procesado)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Regla de negocio (saldo insuficiente, día no permitido, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    AccountRequest:
      type: object
      required: [ holderDocument,holderDocumentType, accountType ]
      properties:
        id:
          type: string
          description: ID único de la cuenta bancaria
          readOnly: true
        accountNumber:
          type: string
          description: Número de cuenta autogenerado (11 dígitos)
          readOnly: true
          pattern: '^\d{11}$'
        interbankNumber:
          type: string
          description: Número de cuenta interbancario autogenerado (20 dígitos)
          readOnly: true
          pattern: '^\d{20}$'
        holderDocument:
          type: string
          description: Documento del titular de la cuenta (8–11 dígitos)
          pattern: '^\d{8,11}$'
        holderDocumentType:
          type: string
          description: Tipo de documento del titular
          enum: [ DNI, PASSPORT, RUC, CE ]
        authorizedSigners:
          type: array
          description: Documentos de firmantes autorizados (8–11 dígitos)
          items:
            type: string
            pattern: '^\d{8,11}$'
        accountType:
          type: string
          enum: [ SAVINGS, CHECKING, FIXED_TERM ]
          description: Tipo de cuenta
        balance:
          type: number
          minimum: 0
          description: Saldo inicial (>= 0)
        interestRate:
          type: number
          minimum: 0
          description: Tasa de interés anual (%)
        monthlyMovementLimit:
          type: integer
          minimum: 0
          description: Solo para cuentas SAVINGS
        maintenanceFee:
          type: number
          minimum: 0
          description: Solo para cuentas CHECKING
        allowedDayOfMonth:
          type: integer
          minimum: 1
          maximum: 28
          description: Solo para cuentas FIXED_TERM
        creationDate:
          type: string
          format: date
          description: Fecha de creación
          readOnly: true
        active:
          type: boolean
          description: Estado de la cuenta (true = activa, false = inactiva)
        linkedCard:
          $ref: "#/components/schemas/LinkedCard"
        freeTransactionsLimit:
          type: integer
          description: Número máximo de transacciones sin comisión
        commissionFee:
          type: number
          description: Comisión por transacción excedida

    AccountResponse:
      type: object
      properties:
        id:
          type: string
        accountNumber:
          type: string
          pattern: '^\d{11}$'
        interbankNumber:
          type: string
          pattern: '^\d{20}$'
        holderDocument:
          type: string
          pattern: '^\d{8,11}$'
        holderDocumentType:
          type: string
          description: Tipo de documento del titular
          enum: [ DNI, PASSPORT, RUC, CE ]
        authorizedSigners:
          type: array
          items:
            type: string
            pattern: '^\d{8,11}$'
        accountType:
          type: string
          enum: [ SAVINGS, CHECKING, FIXED_TERM ]
        balance:
          type: number
        interestRate:
          type: number
        monthlyMovementLimit:
          type: integer
          nullable: true
        maintenanceFee:
          type: number
          nullable: true
        allowedDayOfMonth:
          type: integer
          nullable: true
        creationDate:
          type: string
          format: date
        active:
          type: boolean
        linkedCard:
          $ref: "#/components/schemas/LinkedCard"
        freeTransactionsLimit:
          type: integer

        commissionFee:
          type: number

    LinkedCard:
      type: object
      properties:
        id:
          type: string
          description: ID único de la tarjeta vinculada

    AccountLimitsResponse:
      type: object
      properties:
        freeTransactionsLimit:
          type: integer
        commissionFee:
          type: number
        usedTransactionsThisMonth:
          type: integer

    AccountMovement:
      type: object
      properties:
        transactionId:
          type: string
        date:
          type: string
          format: date-time
        type:
          type: string
          enum: [ deposit, withdrawal, transfer, commission ]
        amount:
          type: number
        commissionApplied:
          type: number

    BalanceOperationType:
      type: string
      enum: [ deposit, withdrawal, transfer_in, transfer_out, commission ]

    BalanceOperationRequest:
      type: object
      required: [ operationId, type, amount ]
      properties:
        operationId:
          type: string
          description: UUID para idempotencia
        type:
          $ref: '#/components/schemas/BalanceOperationType'
        amount:
          type: number
          minimum: 0.01
        metadata:
          type: object
          additionalProperties: true

    BalanceOperationResponse:
      type: object
      properties:
        applied:
          type: boolean
        newBalance:
          type: number
        commissionApplied:
          type: number
          description: Comisión calculada (si excede operaciones gratis)
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
